// Generated by view binder compiler. Do not edit!
package com.example.android.newsbit.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.android.newsbit.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemNewsBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final MaterialButton button;

  @NonNull
  public final TextView description;

  @NonNull
  public final ImageView image;

  @NonNull
  public final MaterialButton shareButton;

  @NonNull
  public final TextView sourceName;

  @NonNull
  public final TextView timestamp;

  @NonNull
  public final TextView title;

  private ItemNewsBinding(@NonNull MaterialCardView rootView, @NonNull MaterialButton button,
      @NonNull TextView description, @NonNull ImageView image, @NonNull MaterialButton shareButton,
      @NonNull TextView sourceName, @NonNull TextView timestamp, @NonNull TextView title) {
    this.rootView = rootView;
    this.button = button;
    this.description = description;
    this.image = image;
    this.shareButton = shareButton;
    this.sourceName = sourceName;
    this.timestamp = timestamp;
    this.title = title;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemNewsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemNewsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_news, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemNewsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button;
      MaterialButton button = rootView.findViewById(id);
      if (button == null) {
        break missingId;
      }

      id = R.id.description;
      TextView description = rootView.findViewById(id);
      if (description == null) {
        break missingId;
      }

      id = R.id.image;
      ImageView image = rootView.findViewById(id);
      if (image == null) {
        break missingId;
      }

      id = R.id.shareButton;
      MaterialButton shareButton = rootView.findViewById(id);
      if (shareButton == null) {
        break missingId;
      }

      id = R.id.source_name;
      TextView sourceName = rootView.findViewById(id);
      if (sourceName == null) {
        break missingId;
      }

      id = R.id.timestamp;
      TextView timestamp = rootView.findViewById(id);
      if (timestamp == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = rootView.findViewById(id);
      if (title == null) {
        break missingId;
      }

      return new ItemNewsBinding((MaterialCardView) rootView, button, description, image,
          shareButton, sourceName, timestamp, title);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
